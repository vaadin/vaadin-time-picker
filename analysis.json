{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-time-picker.html",
        "start": {
          "line": 284,
          "column": 6
        },
        "end": {
          "line": 284,
          "column": 58
        }
      },
      "elements": [
        {
          "description": "The text-field element.\n\n### Styling\n\nSee [`<vaadin-text-field>` documentation](https://github.com/vaadin/vaadin-text-field/blob/master/src/vaadin-text-field.html)\nfor `<vaadin-time-picker-text-field>` parts and available slots (prefix, suffix etc.)\n\nSee [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-time-picker-text-field.html",
          "properties": [
            {
              "name": "focusElement",
              "type": "?",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 236,
                  "column": 4
                },
                "end": {
                  "line": 238,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "autofocus",
              "type": "boolean | null | undefined",
              "description": "Specify that this control should have input focus when the page loads.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 55,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_previousTabIndex",
              "type": "number | null | undefined",
              "description": "Stores the previous value of tabindex attribute of the disabled element",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 62,
                  "column": 8
                },
                "end": {
                  "line": 64,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "type": "boolean | null | undefined",
              "description": "If true, the user cannot interact with this element.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 69,
                  "column": 8
                },
                "end": {
                  "line": 73,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_disabledChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_isShiftTabbing",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 75,
                  "column": 8
                },
                "end": {
                  "line": 77,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "autocomplete",
              "type": "string | null | undefined",
              "description": "Whether the value of the control can be automatically completed by the browser.\nList of available options at:\nhttps://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 107,
                  "column": 8
                },
                "end": {
                  "line": 109,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "autocorrect",
              "type": "string | null | undefined",
              "description": "This is a property supported by Safari that is used to control whether\nautocorrection should be enabled when the user is entering/editing the text.\nPossible values are:\non: Enable autocorrection.\noff: Disable autocorrection.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 118,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "autocapitalize",
              "type": "string | null | undefined",
              "description": "This is a property supported by Safari and Chrome that is used to control whether\nautocapitalization should be enabled when the user is entering/editing the text.\nPossible values are:\ncharacters: Characters capitalization.\nwords: Words capitalization.\nsentences: Sentences capitalization.\nnone: No capitalization.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 131,
                  "column": 8
                },
                "end": {
                  "line": 133,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "errorMessage",
              "type": "string | null | undefined",
              "description": "Error to show when the input value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 141,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "label",
              "type": "string | null | undefined",
              "description": "String used for the label element.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 146,
                  "column": 8
                },
                "end": {
                  "line": 150,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_labelChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "maxlength",
              "type": "number | null | undefined",
              "description": "Maximum number of characters (in Unicode code points) that the user can enter.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 155,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "minlength",
              "type": "number | null | undefined",
              "description": "Minimum number of characters (in Unicode code points) that the user can enter.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "name",
              "type": "string | null | undefined",
              "description": "The name of the control, which is submitted with the form data.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 171,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "placeholder",
              "type": "string | null | undefined",
              "description": "A hint to the user of what can be entered in the control.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 178,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "readonly",
              "type": "boolean | null | undefined",
              "description": "This attribute indicates that the user cannot modify the value of the control.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 186,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "required",
              "type": "boolean | null | undefined",
              "description": "Specifies that the user must fill in a value.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 191,
                  "column": 8
                },
                "end": {
                  "line": 194,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "value",
              "type": "string | null | undefined",
              "description": "The initial value of the control.\nIt can be used for two-way data binding.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 201,
                  "column": 8
                },
                "end": {
                  "line": 206,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_valueChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "invalid",
              "type": "boolean | null | undefined",
              "description": "This property is set to true when the control value is invalid.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 211,
                  "column": 8
                },
                "end": {
                  "line": 216,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "preventInvalidInput",
              "type": "boolean | null | undefined",
              "description": "When set to true, user is prevented from typing a value that\nconflicts with the given `pattern`.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 222,
                  "column": 8
                },
                "end": {
                  "line": 224,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_labelId",
              "type": "string | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 226,
                  "column": 8
                },
                "end": {
                  "line": 228,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_errorId",
              "type": "string | null | undefined",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 230,
                  "column": 8
                },
                "end": {
                  "line": 232,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "list",
              "type": "string | null | undefined",
              "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 122,
                  "column": 12
                },
                "end": {
                  "line": 124,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldElement"
            },
            {
              "name": "pattern",
              "type": "string | null | undefined",
              "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 130,
                  "column": 12
                },
                "end": {
                  "line": 132,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldElement"
            },
            {
              "name": "title",
              "type": "string | null | undefined",
              "description": "Message to show to the user when validation fails.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 139,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "Vaadin.TextFieldElement"
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 298,
                  "column": 4
                },
                "end": {
                  "line": 311,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 123,
                  "column": 4
                },
                "end": {
                  "line": 128,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 133,
                  "column": 4
                },
                "end": {
                  "line": 144,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_setFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 146,
                  "column": 4
                },
                "end": {
                  "line": 160,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "focused"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 162,
                  "column": 4
                },
                "end": {
                  "line": 164,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_bodyKeyupListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 166,
                  "column": 4
                },
                "end": {
                  "line": 168,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_focus",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 179,
                  "column": 4
                },
                "end": {
                  "line": 186,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "focus",
              "description": "Moving the focus from the host element causes firing of the blur event what leads to problems in IE.",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 192,
                  "column": 4
                },
                "end": {
                  "line": 199,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "blur",
              "description": "Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 206,
                  "column": 4
                },
                "end": {
                  "line": 209,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_disabledChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 211,
                  "column": 4
                },
                "end": {
                  "line": 224,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "disabled"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_tabindexChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 226,
                  "column": 4
                },
                "end": {
                  "line": 242,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "tabindex"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "_onInput",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 240,
                  "column": 4
                },
                "end": {
                  "line": 247,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_onChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 249,
                  "column": 4
                },
                "end": {
                  "line": 260,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_valueChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 262,
                  "column": 4
                },
                "end": {
                  "line": 275,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "newVal"
                },
                {
                  "name": "oldVal"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_labelChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 277,
                  "column": 4
                },
                "end": {
                  "line": 283,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "checkValidity",
              "description": "Returns true if the current input value satisfies all constraints (if any)",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 289,
                  "column": 4
                },
                "end": {
                  "line": 295,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "validate",
              "description": "Returns true if `value` is valid.\n`<iron-form>` uses this to check the validity or all its elements.",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 319,
                  "column": 4
                },
                "end": {
                  "line": 321,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "boolean",
                "desc": "True if the value is valid."
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_addIEListeners",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 323,
                  "column": 4
                },
                "end": {
                  "line": 336,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_getActiveErrorId",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 338,
                  "column": 4
                },
                "end": {
                  "line": 340,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "invalid"
                },
                {
                  "name": "errorMessage"
                },
                {
                  "name": "errorId"
                }
              ],
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_getActiveLabelId",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 342,
                  "column": 4
                },
                "end": {
                  "line": 344,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "label"
                },
                {
                  "name": "labelId"
                }
              ],
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "_getErrorMessageAriaHidden",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 346,
                  "column": 4
                },
                "end": {
                  "line": 348,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "invalid"
                },
                {
                  "name": "errorMessage"
                },
                {
                  "name": "errorId"
                }
              ],
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "attributeChangedCallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 353,
                  "column": 4
                },
                "end": {
                  "line": 371,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop"
                },
                {
                  "name": "oldVal"
                },
                {
                  "name": "newVal"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.TextFieldMixin"
            }
          ],
          "staticMethods": [
            {
              "name": "finalize",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 14,
                  "column": 4
                },
                "end": {
                  "line": 29,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            },
            {
              "name": "_includeMatchingThemes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 57,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            },
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../../vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 60,
                  "column": 4
                },
                "end": {
                  "line": 66,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                },
                {
                  "name": "template"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "privacy": "public",
          "superclass": "Vaadin.TextFieldElement",
          "name": "Vaadin.TimePickerTextFieldElement",
          "attributes": [
            {
              "name": "autofocus",
              "description": "Specify that this control should have input focus when the page loads.",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 55,
                  "column": 8
                },
                "end": {
                  "line": 57,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "disabled",
              "description": "If true, the user cannot interact with this element.",
              "sourceRange": {
                "file": "../../vaadin-control-state-mixin/vaadin-control-state-mixin.html",
                "start": {
                  "line": 69,
                  "column": 8
                },
                "end": {
                  "line": 73,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.ControlStateMixin"
            },
            {
              "name": "autocomplete",
              "description": "Whether the value of the control can be automatically completed by the browser.\nList of available options at:\nhttps://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 107,
                  "column": 8
                },
                "end": {
                  "line": 109,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "autocorrect",
              "description": "This is a property supported by Safari that is used to control whether\nautocorrection should be enabled when the user is entering/editing the text.\nPossible values are:\non: Enable autocorrection.\noff: Disable autocorrection.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 118,
                  "column": 8
                },
                "end": {
                  "line": 120,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "autocapitalize",
              "description": "This is a property supported by Safari and Chrome that is used to control whether\nautocapitalization should be enabled when the user is entering/editing the text.\nPossible values are:\ncharacters: Characters capitalization.\nwords: Words capitalization.\nsentences: Sentences capitalization.\nnone: No capitalization.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 131,
                  "column": 8
                },
                "end": {
                  "line": 133,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "error-message",
              "description": "Error to show when the input value is invalid.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 138,
                  "column": 8
                },
                "end": {
                  "line": 141,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "label",
              "description": "String used for the label element.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 146,
                  "column": 8
                },
                "end": {
                  "line": 150,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "maxlength",
              "description": "Maximum number of characters (in Unicode code points) that the user can enter.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 155,
                  "column": 8
                },
                "end": {
                  "line": 157,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "minlength",
              "description": "Minimum number of characters (in Unicode code points) that the user can enter.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 162,
                  "column": 8
                },
                "end": {
                  "line": 164,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "name",
              "description": "The name of the control, which is submitted with the form data.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 169,
                  "column": 8
                },
                "end": {
                  "line": 171,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "placeholder",
              "description": "A hint to the user of what can be entered in the control.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 176,
                  "column": 8
                },
                "end": {
                  "line": 178,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "readonly",
              "description": "This attribute indicates that the user cannot modify the value of the control.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 186,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "required",
              "description": "Specifies that the user must fill in a value.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 191,
                  "column": 8
                },
                "end": {
                  "line": 194,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "value",
              "description": "The initial value of the control.\nIt can be used for two-way data binding.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 201,
                  "column": 8
                },
                "end": {
                  "line": 206,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "invalid",
              "description": "This property is set to true when the control value is invalid.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 211,
                  "column": 8
                },
                "end": {
                  "line": 216,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "prevent-invalid-input",
              "description": "When set to true, user is prevented from typing a value that\nconflicts with the given `pattern`.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field-mixin.html",
                "start": {
                  "line": 222,
                  "column": 8
                },
                "end": {
                  "line": 224,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldMixin"
            },
            {
              "name": "list",
              "description": "Identifies a list of pre-defined options to suggest to the user.\nThe value must be the id of a <datalist> element in the same document.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 122,
                  "column": 12
                },
                "end": {
                  "line": 124,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldElement"
            },
            {
              "name": "pattern",
              "description": "A regular expression that the value is checked against.\nThe pattern must match the entire value, not just some subset.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 130,
                  "column": 12
                },
                "end": {
                  "line": 132,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldElement"
            },
            {
              "name": "title",
              "description": "Message to show to the user when validation fails.",
              "sourceRange": {
                "file": "../../vaadin-text-field/src/vaadin-text-field.html",
                "start": {
                  "line": 137,
                  "column": 12
                },
                "end": {
                  "line": 139,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "Vaadin.TextFieldElement"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "change",
              "description": "Fired when the user commits a value change.",
              "metadata": {},
              "inheritedFrom": "Vaadin.TextFieldMixin"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-time-picker-text-field"
        },
        {
          "description": "`<vaadin-time-picker>` is a Web Component providing a time-selection field.\n\n```html\n<vaadin-time-picker></vaadin-time-picker>\n```\n```js\ntimePicker.value = '14:30';\n```\n\nWhen the selected `value` is changed, a `value-changed` event is triggered.",
          "summary": "",
          "path": "src/vaadin-time-picker.html",
          "properties": [
            {
              "name": "__stepSegment",
              "type": "?",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 8
                },
                "end": {
                  "line": 251,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "__inputElement",
              "type": "?",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 269,
                  "column": 8
                },
                "end": {
                  "line": 271,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "__dropdownElement",
              "type": "?",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 273,
                  "column": 8
                },
                "end": {
                  "line": 276,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            },
            {
              "name": "value",
              "type": "String",
              "description": "The time value for this element.\n\nSupported time formats are in ISO 8601:\n- `hh:mm` (default)\n- `hh:mm:ss`\n- `hh:mm:ss.fff`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 12
                },
                "end": {
                  "line": 81,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"__valueChanged\"",
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "step",
              "type": "number | null | undefined",
              "description": "Specifies the number of valid intervals in a day or in an hour used for\nconfiguring the items displayed in the selection box.\n\nIt also configures the precission of the value string. By default\nthe component formats values as `hh:mm` but setting a step value\nlower than one minute or one second, format resolution changes to\n`hh:mm:ss` and `hh:mm:ss.fff` respectively.\n\nUnit must be set in seconds, and for correctly configuring intervals\nin the dropdown, it need to evenly divide a day or an hour.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 95,
                  "column": 12
                },
                "end": {
                  "line": 98,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"__stepChanged\"",
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "__dropdownItems",
              "type": "Array | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 12
                },
                "end": {
                  "line": 102,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "i18n",
              "type": "Object | null | undefined",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure:\n\n                {\n                  // A function to format given `Object` as\n                  // time string. Object is in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n                  formatTime: (time) => {\n                    // returns a string representation of the given\n                    // object in `hh` / 'hh:mm' / 'hh:mm:ss' / 'hh:mm:ss.fff' - formats\n                  },\n\n                  // A function to parse the given text to an `Object` in the format\n                  // `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`.\n                  // Must properly parse (at least) text\n                  // formatted by `formatTime`.\n                  parseTime: text => {\n                    // Parses a string in object/string that can be formatted by`formatTime`.\n                  }\n                }",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 128,
                  "column": 12
                },
                "end": {
                  "line": 153,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "__previousValue",
              "type": "Object | null | undefined",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 155,
                  "column": 12
                },
                "end": {
                  "line": 155,
                  "column": 35
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 165,
                  "column": 8
                },
                "end": {
                  "line": 168,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__updateDropdownItems",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 170,
                  "column": 8
                },
                "end": {
                  "line": 172,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__generateDropdownList",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 8
                },
                "end": {
                  "line": 201,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "__valueChanged",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 8
                },
                "end": {
                  "line": 210,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "oldValue"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__onInputChange",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 8
                },
                "end": {
                  "line": 215,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__updateValue",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 217,
                  "column": 8
                },
                "end": {
                  "line": 220,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "obj"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__updateInputValue",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 222,
                  "column": 8
                },
                "end": {
                  "line": 225,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "obj"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "__validateTime",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 227,
                  "column": 8
                },
                "end": {
                  "line": 235,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "timeObject"
                }
              ]
            },
            {
              "name": "__formatISO",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 253,
                  "column": 8
                },
                "end": {
                  "line": 256,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "time"
                }
              ]
            },
            {
              "name": "__parseISO",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 258,
                  "column": 8
                },
                "end": {
                  "line": 261,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "text"
                }
              ]
            },
            {
              "name": "__stepChanged",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 8
                },
                "end": {
                  "line": 267,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "step"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.TimePickerElement",
          "attributes": [
            {
              "name": "value",
              "description": "The time value for this element.\n\nSupported time formats are in ISO 8601:\n- `hh:mm` (default)\n- `hh:mm:ss`\n- `hh:mm:ss.fff`",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 12
                },
                "end": {
                  "line": 81,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "String"
            },
            {
              "name": "step",
              "description": "Specifies the number of valid intervals in a day or in an hour used for\nconfiguring the items displayed in the selection box.\n\nIt also configures the precission of the value string. By default\nthe component formats values as `hh:mm` but setting a step value\nlower than one minute or one second, format resolution changes to\n`hh:mm:ss` and `hh:mm:ss.fff` respectively.\n\nUnit must be set in seconds, and for correctly configuring intervals\nin the dropdown, it need to evenly divide a day or an hour.",
              "sourceRange": {
                "start": {
                  "line": 95,
                  "column": 12
                },
                "end": {
                  "line": 98,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "i18n",
              "description": "The object used to localize this component.\nTo change the default localization, replace the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure:\n\n                {\n                  // A function to format given `Object` as\n                  // time string. Object is in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\n                  formatTime: (time) => {\n                    // returns a string representation of the given\n                    // object in `hh` / 'hh:mm' / 'hh:mm:ss' / 'hh:mm:ss.fff' - formats\n                  },\n\n                  // A function to parse the given text to an `Object` in the format\n                  // `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`.\n                  // Must properly parse (at least) text\n                  // formatted by `formatTime`.\n                  parseTime: text => {\n                    // Parses a string in object/string that can be formatted by`formatTime`.\n                  }\n                }",
              "sourceRange": {
                "start": {
                  "line": 128,
                  "column": 12
                },
                "end": {
                  "line": 153,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "value-changed",
              "description": "Fired when the `value` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [],
          "tagname": "vaadin-time-picker"
        }
      ]
    }
  ]
}
